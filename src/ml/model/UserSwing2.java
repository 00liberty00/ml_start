package ml.model;
// Generated 07.01.2017 22:47:20 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Pattern;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * UserSwing generated by hbm2java
 */
@Entity
@Table(name = "userSwing",
         catalog = "marleo"
)
public class UserSwing2 implements java.io.Serializable {

    private Long idUser;
    private String login;
    private String name;
    private String password;
    private Date lastLogin;
    private Boolean active;
    private String pass;
    private String phone;
    private String email;
    private int admin;
    private Set checks = new HashSet(0);

    public UserSwing2() {
    }

    public UserSwing2(Date lastLogin, String pass, int admin) {
        this.lastLogin = lastLogin;
        this.pass = pass;
        this.admin = admin;
    }

    public UserSwing2(String login, String name, String password, Date lastLogin, Boolean active, String pass, String phone, String email, int admin, Set checks) {
        this.login = login;
        this.name = name;
        this.password = password;
        this.lastLogin = lastLogin;
        this.active = active;
        this.pass = pass;
        this.phone = phone;
        this.email = email;
        this.admin = admin;
        this.checks = checks;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id_user", unique = true, nullable = false)
    public Long getIdUser() {
        return this.idUser;
    }

    public void setIdUser(Long idUser) {
        this.idUser = idUser;
    }

    @NotEmpty(message = "Логин должен быть задан")
    @Column(name = "login", length = 50)
    public String getLogin() {
        return this.login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    @NotEmpty(message = "Имя должно быть задано")
    @Column(name = "name", length = 50)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "password", length = 50)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_login", nullable = false, length = 19)
    public Date getLastLogin() {
        return this.lastLogin;
    }

    public void setLastLogin(Date lastLogin) {
        this.lastLogin = lastLogin;
    }

    @Column(name = "active")
    public Boolean getActive() {
        return this.active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    @NotEmpty(message = "Пароль должен быть задан")
    @Column(name = "pass", nullable = false, length = 50)
    public String getPass() {
        return this.pass;
    }

    public void setPass(String pass) {
        this.pass = pass;
    }
    
    @Pattern(regexp="(\\+\\d{11}|\\+\\d{12})+$", message="Не правильно введен номер телефона")
    @Column(name = "phone", length = 50)
    @NotEmpty(message = "Номер телефона должен быть задан")
    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    @Pattern(regexp="^(?:[a-zA-Z0-9_'^&/+-])+(?:\\.(?:[a-zA-Z0-9_'^&/+-])+)" +
      "*@(?:(?:\\[?(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))\\.)" +
      "{3}(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\]?)|(?:[a-zA-Z0-9-]+\\.)" +
      "+(?:[a-zA-Z]){2,}\\.?)$", message="Не правильный E-mail!")
    @Column(name = "email", length = 50)
    @NotEmpty(message = "Почта должна быть задана")
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "admin", nullable = false)
    public int getAdmin() {
        return this.admin;
    }

    public void setAdmin(int admin) {
        this.admin = admin;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userSwing")
    public Set getChecks() {
        return this.checks;
    }

    public void setChecks(Set checks) {
        this.checks = checks;
    }

}
